% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bifurcation.R
\name{bifurcation}
\alias{bifurcation}
\title{Phaseplane analysis of a system of ODEs}
\usage{
bifurcation(model, state, parms)
}
\arguments{
\item{model}{(function, required)
\preformatted{}
              An R-function that computes the values of the derivatives
              in the ODE system (the model definition) at time t.
              The model must be defined as: model <- function(t, state, parms),
              where t is the current time point in the integration, state is
              the current value of the variables in the ODE #' system and
              parms is a vector or list of parameters.
              The return value of func should be a list, whose first and single
              element is a vector containing the derivatives of y with respect
              to time. The derivatives must be specified in the same order as
              the state variables state. The vector state and parms should both
              have name attributes for all their elements}

\item{state}{(numeric vector, required)
\preformatted{}
              The initial (state) values for the ODE system. This vector should
              have name attributes for all its elements}

\item{parms}{(numeric vector, required)
\preformatted{}
              The values of the parameters in the ODE system. This vector should
              have name attributes for all its elements}
}
\value{
None.
}
\description{
\code{bifurcation}
}
\details{
bifurcation(model, state, parms)
}
\examples{
\dontrun{
# The model has to be specified as a function that returns
# the derivatives as a list.
model <- function(t, state, parms) {
  with(as.list(c(state,parms)), {

    dR <- r*R*(1 - R/K) - a*R*N
    dN <- c*a*R*N - delta*N

    return(list(c(dR, dN)))
  })
}

# The initial state of the system has to be specified as a named vector of state values.
state <- c(R=1, N=0.01)

# Parameters has to be specified as a named vector of parameters.
parms <- c(r=1, K=1, a=1, c=1, delta=0.5)

phaseplane(model, state, parms)
}
}
